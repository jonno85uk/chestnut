version: 2
jobs:
  build:
    docker:
      - image: ubuntu:19.10

    steps:
      - checkout

      - run:
          name: Update Environment
          command: 'apt update'

      - run:
          name: Setup Build Tools
          command: 'apt install --assume-yes build-essential pkg-config qtchooser wget unzip desktop-file-utils git cmake'
          
      - run:
          name: Install Libraries
          command: 'apt install --assume-yes qt5-default libqt5svg5-dev qtmultimedia5-dev libavutil-dev libavformat-dev libavcodec-dev libavfilter-dev libavutil-dev libswscale-dev libboost-dev'
          
      - run:
          name: Install MediaHandling
          command: 'git clone https://github.com/jonno85uk/mediahandling.git mh; cd mh; mkdir build; cd build; cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr/local/ -DCMAKE_BUILD_TYPE=Release ..; make install'

      - run:
          name: Configure Build
          command: 'qmake CONFIG+="release"'
      - run:
          name: Build Chestnut
          command: 'make -j4'

      - run:
          name: Configure UnitTest build
          command: 'qmake CONFIG+="release unittests"'

      - run:
          name: Build UnitTests
          command: 'make -j4'

      # Could be done in parallel with build
      #- run:
      #    name: Setup Sonar Scanner
      #    command: 'pushd scripts && chmod +x setupSonarScanner.sh && ./setupSonarScanner.sh && popd'

      #- run:
      #    name: Run Static Analysis
      #    command: './scripts/static_analysis.sh'

      # parallelise this
      - run: 
          name: AppImage Build
          command: 'cd packaging/appimage/ && cp ../../third_party/pkg2appimage . && chmod u+x pkg2appimage && ./pkg2appimage chestnut.yml'

      - store_artifacts:
          path: 'packaging/appimage/out/Chestnut-.glibc2.14-x86_64.AppImage'
          destination: 'Chestnut-glibc2.14-x86_64.AppImage'
